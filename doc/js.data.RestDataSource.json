{
    "methods": [
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                94,
                96
            ],
            "description": "Returns the ENVIRONMENT object",
            "returns": {
                "types": [
                    "js.core.Bindable"
                ]
            },
            "definedBy": "js.core.Component",
            "name": "ENV",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                102,
                104
            ],
            "description": "Returns the start parameter of the application",
            "returns": {
                "types": [
                    "Object"
                ]
            },
            "definedBy": "js.core.Component",
            "name": "PARAMETER",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "config"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                203,
                205
            ],
            "definedBy": "js.core.Component",
            "name": "_addConfiguration",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "template"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                196,
                201
            ],
            "definedBy": "js.core.Component",
            "name": "_addTemplate",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "model"
                },
                {
                    "name": "options"
                },
                {
                    "name": "callback"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                1009,
                1011
            ],
            "definedBy": "js.data.DataSource",
            "name": "_afterModelSave",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/EventDispatcher.js",
            "lineNumbers": [
                201,
                203
            ],
            "definedBy": "js.core.EventDispatcher",
            "name": "_beforeDestroy",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "model"
                },
                {
                    "name": "options"
                },
                {
                    "name": "callback"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                999,
                1001
            ],
            "definedBy": "js.data.DataSource",
            "name": "_beforeModelSave",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                314,
                338
            ],
            "definedBy": "js.core.Bindable",
            "name": "_bindBus",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "resource"
                },
                {
                    "name": "endPoint"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                258,
                279
            ],
            "name": "_buildUriForResource",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                558,
                560
            ],
            "private": "This method is called after all children are initialized",
            "definedBy": "js.core.Component",
            "name": "_childrenInitialized",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "desc"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                370,
                387
            ],
            "definedBy": "js.core.Component",
            "name": "_cleanUpDescriptor",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "attribute",
                    "optional": false
                },
                {
                    "types": null,
                    "name": "key",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                568,
                594
            ],
            "description": "Returns a copy of the attribute. This method is a hook for further cloning options",
            "private": "",
            "definedBy": "js.core.Bindable",
            "name": "_cloneAttribute",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Object"
                    ],
                    "name": "attributes",
                    "optional": false,
                    "description": "contains the changed attributes"
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": false,
                    "description": "the options passed in the set method"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                862,
                864
            ],
            "description": "called after attributes has set and some of the has been changed\n",
            "abstract": "",
            "private": "",
            "definedBy": "js.core.Bindable",
            "name": "_commitChangedAttributes",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                756,
                759
            ],
            "definedBy": "js.core.Bindable",
            "name": "_commitInvalidatedAttributes",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "DOM"
                    ],
                    "name": "node",
                    "optional": false
                },
                {
                    "types": null,
                    "name": "attributes",
                    "optional": true,
                    "description": "for new Component"
                },
                {
                    "types": null,
                    "name": "rootScope",
                    "optional": false
                },
                {
                    "name": "cidScope"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                463,
                497
            ],
            "description": "Create {@link Component} for DOM Node with given attributes",
            "definedBy": "js.core.Component",
            "name": "_createComponentForNode",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "sortParameters"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                796,
                811
            ],
            "name": "_createSortParameter",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "node"
                },
                {
                    "name": "rootScope"
                },
                {
                    "name": "cidScope"
                },
                {
                    "name": "attributes"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                522,
                530
            ],
            "definedBy": "js.core.Component",
            "name": "_createTextElement",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Function"
                    ],
                    "name": "fnc",
                    "optional": false
                },
                {
                    "types": [
                        "String"
                    ],
                    "name": "cacheId",
                    "optional": true
                },
                {
                    "types": [
                        "Number"
                    ],
                    "name": "delay",
                    "optional": true
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "scope",
                    "optional": true
                },
                {
                    "types": [
                        "Array"
                    ],
                    "name": "parameters",
                    "optional": true
                },
                {
                    "types": [
                        "String"
                    ],
                    "name": "strategy",
                    "optional": true,
                    "defaultValue": "loop",
                    "description": "loop will trigger the function at least every delay, wait will clear the timeout"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Base.js",
            "lineNumbers": [
                84,
                118
            ],
            "description": "",
            "private": "",
            "definedBy": "js.core.Base",
            "name": "_debounceFunctionCall",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                600,
                602
            ],
            "description": "",
            "returns": {
                "types": [
                    "Object"
                ],
                "description": "returns the default attributes and includes the defaults from base classes"
            },
            "private": "",
            "definedBy": "js.core.Bindable",
            "name": "_defaultAttributes",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/EventDispatcher.js",
            "lineNumbers": [
                209,
                215
            ],
            "definedBy": "js.core.EventDispatcher",
            "name": "_destroyCompleted",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                364,
                378
            ],
            "definedBy": "js.core.Bindable",
            "name": "_extract",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String"
                    ],
                    "name": "property",
                    "optional": false,
                    "description": "the name of the static property used to find defaults"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                611,
                639
            ],
            "description": "generates a default chain containing the values from this instance and base classes\n",
            "returns": {
                "types": [
                    "*"
                ]
            },
            "private": "",
            "definedBy": "js.core.Bindable",
            "name": "_generateDefaultsChain",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "descriptor"
                },
                {
                    "name": "rootScope"
                },
                {
                    "name": "cidScope"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Element.js",
            "lineNumbers": [
                67,
                124
            ],
            "definedBy": "js.core.Element",
            "name": "_getAttributesFromDescriptor",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "descriptor",
                    "optional": false
                },
                {
                    "types": null,
                    "name": "rootScope",
                    "optional": false
                },
                {
                    "types": null,
                    "name": "attributes",
                    "optional": false
                },
                {
                    "types": null,
                    "name": "cidScope",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                539,
                553
            ],
            "description": "Converts all child nodes of a descriptor to instances of Components or TextElement",
            "definedBy": "js.core.Component",
            "name": "_getChildrenFromDescriptor",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "factory"
                },
                {
                    "name": "parent"
                },
                {
                    "name": "data"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                454,
                536
            ],
            "definedBy": "js.data.DataSource",
            "overwritesMethod": true,
            "name": "_getContext",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "eventDefinition"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                402,
                404
            ],
            "definedBy": "js.core.Component",
            "name": "_getEventName",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "eventName"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                419,
                422
            ],
            "definedBy": "js.core.Component",
            "name": "_getEventTypeForAttribute",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "method"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                189,
                198
            ],
            "name": "_getHttpMethod",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "node"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Element.js",
            "lineNumbers": [
                125,
                127
            ],
            "definedBy": "js.core.Element",
            "name": "_getLocalNameFromNode",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "collectionPage"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                813,
                823
            ],
            "name": "_getPagingParameterForCollectionPage",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "desc"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Element.js",
            "lineNumbers": [
                206,
                219
            ],
            "definedBy": "js.core.Element",
            "name": "_getTextContentFromDescriptor",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "request"
                },
                {
                    "name": "xhr"
                },
                {
                    "name": "cb"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                433,
                452
            ],
            "name": "_handleResultSuccess",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "err"
                },
                {
                    "types": null,
                    "name": "callback",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                790,
                794
            ],
            "description": "",
            "name": "_handleXHRError",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "attributes"
                },
                {
                    "name": "search"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                866,
                875
            ],
            "definedBy": "js.core.Bindable",
            "name": "_hasAll",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "attributes"
                },
                {
                    "name": "search"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                877,
                886
            ],
            "definedBy": "js.core.Bindable",
            "name": "_hasSome",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                439,
                450
            ],
            "definedBy": "js.core.Bindable",
            "name": "_initializationComplete",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                216,
                226
            ],
            "description": "starts the initialization of the `Bindable` if it hasn't initialized yet.\n\nIt calls the following methods:\n\n* initialize();\n* _initializeBindings();\n",
            "private": "",
            "definedBy": "js.core.Bindable",
            "name": "_initialize",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "attributes",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Element.js",
            "lineNumbers": [
                151,
                152
            ],
            "description": "initializes the attributes",
            "private": "",
            "definedBy": "js.core.Element",
            "name": "_initializeAttributes",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                383,
                433
            ],
            "description": "Initialize all Binding and Event attributes",
            "definedBy": "js.core.Bindable",
            "name": "_initializeBindings",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                435,
                437
            ],
            "definedBy": "js.core.Bindable",
            "name": "_initializeBindingsBeforeComplete",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "childComponents"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                224,
                229
            ],
            "definedBy": "js.core.Component",
            "name": "_initializeChildren",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Element.js",
            "lineNumbers": [
                154,
                155
            ],
            "definedBy": "js.core.Element",
            "name": "_initializeDescriptors",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "attributes",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Element.js",
            "lineNumbers": [
                143,
                144
            ],
            "description": "initializes all attributes handling events\n",
            "private": "",
            "definedBy": "js.core.Element",
            "name": "_initializeEventAttributes",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                201,
                204
            ],
            "description": "\ninvokes the `_initialize` method. This method is a hook function and is overwritten by js.core.Component\n",
            "private": "",
            "definedBy": "js.core.Bindable",
            "name": "_initializeFromCtor",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "attributes"
                },
                {
                    "name": "rootScope"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                424,
                454
            ],
            "definedBy": "js.core.Component",
            "name": "_initializeXamlEventAttributes",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                276,
                311
            ],
            "definedBy": "js.core.Bindable",
            "name": "_inject",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                241,
                243
            ],
            "description": "\nreturns the chained object defining the required injections\n",
            "returns": {
                "types": [
                    "Object"
                ]
            },
            "private": "",
            "definedBy": "js.core.Bindable",
            "name": "_injectChain",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/EventDispatcher.js",
            "lineNumbers": [
                205,
                207
            ],
            "definedBy": "js.core.EventDispatcher",
            "name": "_innerDestroy",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "event",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                410,
                417
            ],
            "description": "Returns true if event is defined in Component event list",
            "definedBy": "js.core.Component",
            "name": "_isComponentEvent",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "attributeName"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                389,
                391
            ],
            "definedBy": "js.core.Component",
            "name": "_isEventAttribute",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "attributeName"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                394,
                396
            ],
            "definedBy": "js.core.Component",
            "name": "_isFunctionAttribute",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "attributeName"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                398,
                400
            ],
            "definedBy": "js.core.Component",
            "name": "_isXamlEventAttribute",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "domNode",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                573,
                588
            ],
            "description": "determinate the local-name of a DomNode\n",
            "definedBy": "js.core.Component",
            "name": "_localNameFromDomNode",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "xhr"
                },
                {
                    "name": "model"
                },
                {
                    "name": "options"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                344,
                364
            ],
            "name": "_parseModelPayload",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "request",
                    "optional": false
                },
                {
                    "types": null,
                    "name": "xhr",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                568,
                570
            ],
            "returns": {
                "types": [
                    "Boolean"
                ]
            },
            "private": "",
            "name": "_parsePayloadOnCreate",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "request",
                    "optional": false
                },
                {
                    "types": null,
                    "name": "xhr",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                580,
                582
            ],
            "returns": {
                "types": [
                    "Boolean"
                ]
            },
            "private": "",
            "name": "_parsePayloadOnUpdate",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                452,
                454
            ],
            "definedBy": "js.core.Bindable",
            "name": "_postConstruct",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                456,
                458
            ],
            "definedBy": "js.core.Bindable",
            "name": "_preDestroy",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Element.js",
            "lineNumbers": [
                202,
                204
            ],
            "definedBy": "js.core.Element",
            "name": "_preinitialize",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "resourcePath"
                },
                {
                    "name": "resource"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                281,
                283
            ],
            "name": "_resourcePathToUri",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "model"
                },
                {
                    "name": "options"
                },
                {
                    "name": "callback"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                594,
                670
            ],
            "definedBy": "js.data.DataSource",
            "overwritesMethod": true,
            "name": "_saveModel",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                258,
                261
            ],
            "description": "sets up the Bindable or Component. It will inject the required injections and\nalso will bind the application wide `MessageBus` to all methods annotated with the\n`.bus()` method annotation\n\nFor `Components` the setUp method is invoked automatically during the add of the Component.\nFor non `Components`\n\n",
            "private": "",
            "see": [
                "{js.core.MessageBus}"
            ],
            "definedBy": "js.core.Bindable",
            "name": "_setUp",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                271,
                274
            ],
            "description": "tears down the Bindable or Component. It will remove the injected variables and\nalso will unbind the annotated event handlers from the application wide `MessageBus`\n",
            "private": "",
            "see": [
                "{js.core.MessageBus}"
            ],
            "definedBy": "js.core.Bindable",
            "name": "_tearDown",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "queryObject"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                1105,
                1107
            ],
            "definedBy": "js.data.DataSource",
            "name": "_translateQueryObject",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                340,
                362
            ],
            "definedBy": "js.core.Bindable",
            "name": "_unbindBus",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                120,
                124
            ],
            "definedBy": "js.data.DataSource",
            "overwritesMethod": true,
            "name": "_validateConfiguration",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "js.core.Element"
                    ],
                    "name": "child",
                    "optional": false
                },
                {
                    "name": "options"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                131,
                166
            ],
            "description": "adds a children",
            "definedBy": "js.core.Component",
            "name": "addChild",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "path"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                590,
                598
            ],
            "definedBy": "js.core.Component",
            "name": "baseUrl",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String"
                    ],
                    "name": "eventType",
                    "optional": false,
                    "description": "The name of the event"
                },
                {
                    "name": "callback"
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "scope",
                    "optional": true,
                    "description": "This sets the scope for the callback function"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/EventDispatcher.js",
            "lineNumbers": [
                72,
                88
            ],
            "description": "Binds a callback and a scope to a given eventType\n",
            "definedBy": "js.core.EventDispatcher",
            "name": "bind",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                110,
                112
            ],
            "description": "provides access to the MessageBus",
            "returns": {
                "types": [
                    "js.core.MessageBus"
                ]
            },
            "definedBy": "js.core.Component",
            "name": "bus",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                903,
                905
            ],
            "description": "Clears all attributes",
            "returns": {
                "types": [
                    "this"
                ]
            },
            "definedBy": "js.core.Bindable",
            "name": "clear",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                535,
                561
            ],
            "description": "This method returns a copy of the Object with all attributes on the $\n",
            "returns": {
                "types": [
                    "js.core.Bindable"
                ],
                "description": "a fresh copy of the Bindable"
            },
            "definedBy": "js.core.Bindable",
            "name": "clone",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "model"
                },
                {
                    "name": "options"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                747,
                751
            ],
            "definedBy": "js.data.DataSource",
            "name": "composeModel",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "collection"
                },
                {
                    "name": "options"
                },
                {
                    "name": "callback"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                970,
                972
            ],
            "definedBy": "js.data.DataSource",
            "name": "countCollection",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "path"
                },
                {
                    "name": "callback"
                },
                {
                    "name": "callbackScope"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                515,
                520
            ],
            "definedBy": "js.core.Component",
            "name": "createBinding",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                360,
                368
            ],
            "definedBy": "js.core.Component",
            "name": "createChildren",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Function"
                    ],
                    "name": "factory",
                    "optional": false,
                    "description": "The factory"
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": true
                },
                {
                    "types": [
                        "js.data.DataSource.Context"
                    ],
                    "name": "context",
                    "optional": true
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                926,
                930
            ],
            "description": "Creates a collection by a given factory in a caching context",
            "returns": {
                "types": [
                    "js.data.Collection"
                ]
            },
            "definedBy": "js.data.DataSource",
            "name": "createCollection",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Function"
                    ],
                    "name": "factory",
                    "optional": false
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "attributes",
                    "optional": true
                },
                {
                    "types": null,
                    "name": "descriptor",
                    "optional": true,
                    "defaultValue": "false"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                506,
                513
            ],
            "description": "",
            "returns": {
                "types": [
                    "*"
                ]
            },
            "definedBy": "js.core.Component",
            "name": "createComponent",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "contextModel"
                },
                {
                    "types": null,
                    "name": "properties",
                    "optional": false
                },
                {
                    "types": null,
                    "name": "parentContext",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                142,
                144
            ],
            "description": "creates the context as RestContext\n",
            "returns": {
                "types": [
                    "js.core.RestDataSource.RestContext"
                ]
            },
            "definedBy": "js.data.DataSource",
            "overwritesMethod": true,
            "name": "createContext",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Function"
                    ],
                    "name": "factory",
                    "optional": false
                },
                {
                    "types": [
                        "String",
                        "Number"
                    ],
                    "name": "id",
                    "optional": true
                },
                {
                    "types": [
                        "js.data.DataSource.Context"
                    ],
                    "name": "context",
                    "optional": true
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                903,
                906
            ],
            "description": "Create an instance of {js.data.Entity}",
            "returns": {
                "types": [
                    "js.data.Entity",
                    "js.data.Model"
                ]
            },
            "definedBy": "js.data.DataSource",
            "name": "createEntity",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Function"
                    ],
                    "name": "factory",
                    "optional": false
                },
                {
                    "types": [
                        "String",
                        "Number"
                    ],
                    "name": "id",
                    "optional": true
                },
                {
                    "types": [
                        "js.data.DataSource.Context"
                    ],
                    "name": "context",
                    "optional": true
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                915,
                917
            ],
            "description": "Create an instance of {js.data.Model}",
            "returns": {
                "types": [
                    "js.data.Model"
                ]
            },
            "definedBy": "js.data.DataSource",
            "name": "createModel",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                101,
                104
            ],
            "definedBy": "js.core.Base",
            "overwritesMethod": true,
            "name": "ctor",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/EventDispatcher.js",
            "lineNumbers": [
                188,
                199
            ],
            "description": "Clears up the instance",
            "definedBy": "js.core.EventDispatcher",
            "name": "destroy",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Base.js",
            "lineNumbers": [
                41,
                43
            ],
            "description": "this is an empty function doing nothing. It can be used as fallback if a method requires a\ncallback function, which hasn't been passed.\n\n```\nfunction myFunction(callback) {\ncallback = callback || this.emptyCallback;\n}\n```\n",
            "returns": {
                "types": [
                    "Function"
                ],
                "description": "a function doing nothing"
            },
            "definedBy": "js.core.Base",
            "name": "emptyCallback",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "location"
                },
                {
                    "name": "request"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                584,
                592
            ],
            "name": "extractIdFromLocation",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "collectionPage"
                },
                {
                    "name": "payload"
                },
                {
                    "name": "options"
                },
                {
                    "name": "xhr"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                675,
                683
            ],
            "name": "extractListData",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "collectionPage"
                },
                {
                    "name": "payload"
                },
                {
                    "name": "options"
                },
                {
                    "name": "xhr"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                671,
                673
            ],
            "name": "extractListMetaData",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "key"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Element.js",
            "lineNumbers": [
                191,
                200
            ],
            "definedBy": "js.core.Element",
            "name": "find",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "childFactory"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                851,
                857
            ],
            "definedBy": "js.data.DataSource",
            "name": "generateCacheKeyForContext",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Object"
                    ],
                    "name": "scope",
                    "optional": true,
                    "defaultValue": "this",
                    "description": "the scope where the path is evaluated"
                },
                {
                    "types": [
                        "String"
                    ],
                    "name": "key",
                    "optional": false,
                    "description": "or path"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                768,
                842
            ],
            "description": "evaluates a path to retrieve a value\n",
            "returns": {
                "types": null,
                "description": "the value for the path or undefined"
            },
            "definedBy": "js.core.Bindable",
            "name": "get",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "collectionClassName",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                787,
                789
            ],
            "description": "Returns the configuration for a collectionclass name",
            "returns": {
                "types": [
                    "*"
                ]
            },
            "definedBy": "js.data.DataSource",
            "name": "getConfigurationForCollectionClassName",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "modelClass"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                778,
                780
            ],
            "definedBy": "js.data.DataSource",
            "name": "getConfigurationForModelClass",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "js.data.Model"
                    ],
                    "name": "contextModel",
                    "optional": false
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "properties",
                    "optional": false
                },
                {
                    "types": [
                        "js.data.DataSource.Context"
                    ],
                    "name": "parentContext",
                    "optional": true
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                866,
                876
            ],
            "description": "Returns the context for a properties object",
            "returns": {
                "types": [
                    "js.data.DataSource.Context"
                ]
            },
            "definedBy": "js.data.DataSource",
            "name": "getContextByProperties",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Function"
                    ],
                    "name": "childFactory",
                    "optional": false
                },
                {
                    "types": [
                        "js.data.Entity",
                        "js.data.Collection"
                    ],
                    "name": "requestor",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                796,
                849
            ],
            "description": "",
            "returns": {
                "types": [
                    "*"
                ]
            },
            "definedBy": "js.data.DataSource",
            "name": "getContextForChild",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String"
                    ],
                    "name": "action",
                    "optional": true
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                1082,
                1084
            ],
            "description": "Returns the format processor",
            "returns": {
                "types": [
                    "*"
                ]
            },
            "definedBy": "js.data.DataSource",
            "name": "getFormatProcessor",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "contentType"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                859,
                868
            ],
            "name": "getFormatProcessorForContentType",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String"
                    ],
                    "name": "method",
                    "optional": false,
                    "description": "PUT, POST, DELETE OR GET"
                },
                {
                    "types": [
                        "js.data.Model",
                        "js.data.Collection"
                    ],
                    "name": "resource",
                    "optional": false,
                    "description": "A model or a collection"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                180,
                182
            ],
            "description": "Returns the header parameter for a request",
            "returns": {
                "types": [
                    "Object"
                ]
            },
            "name": "getHeaderParameters",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "model"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                212,
                227
            ],
            "name": "getPathComponentsForModel",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "modelClass"
                },
                {
                    "name": "context"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                229,
                256
            ],
            "name": "getPathComponentsForModelClass",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "resource"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                201,
                210
            ],
            "name": "getPathComponentsForResource",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "js.data.Collection"
                    ],
                    "name": "collection",
                    "optional": false
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": true
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                1068,
                1075
            ],
            "description": "Returns the correct processor for a collection\n",
            "returns": {
                "types": [
                    "js.data.DataSource.Processor"
                ],
                "description": "processor"
            },
            "definedBy": "js.data.DataSource",
            "name": "getProcessorForCollection",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "js.data.Model"
                    ],
                    "name": "model",
                    "optional": false
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": true
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                1032,
                1039
            ],
            "description": "Returns the correct processor for model\n",
            "returns": {
                "types": [
                    "js.data.DataSource.Processor"
                ],
                "description": "processor"
            },
            "definedBy": "js.data.DataSource",
            "name": "getProcessorForModel",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "modelClass"
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": true
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                1048,
                1059
            ],
            "description": "Returns the correct processor for model class\n",
            "returns": {
                "types": [
                    "js.data.DataSource.Processor"
                ],
                "description": "processor"
            },
            "definedBy": "js.data.DataSource",
            "name": "getProcessorForModelClass",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                184,
                186
            ],
            "name": "getQueryComposer",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "action",
                    "optional": false,
                    "description": "{String} Rest action [GET, PUT, DELETE, POST]"
                },
                {
                    "types": null,
                    "name": "resource",
                    "optional": false,
                    "description": "{js.data.Model|js.data.Collection} model or collection which gets loaded"
                },
                {
                    "types": null,
                    "name": "options",
                    "optional": false,
                    "description": "{Object} options for the request"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                153,
                173
            ],
            "description": "global query parameter for each REST action",
            "returns": {
                "types": [
                    "Object"
                ]
            },
            "name": "getQueryParameters",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "fncName"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                475,
                488
            ],
            "definedBy": "js.core.Bindable",
            "name": "getScopeForFncName",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "key"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                460,
                473
            ],
            "definedBy": "js.core.Bindable",
            "name": "getScopeForKey",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String"
                    ],
                    "name": "name",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                213,
                222
            ],
            "description": "Goes up the tree and searches for a template component with the given name.\nReturns null if no template was found.",
            "returns": {
                "types": [
                    "js.core.Template"
                ]
            },
            "definedBy": "js.core.Component",
            "name": "getTemplate",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "request"
                },
                {
                    "types": null,
                    "name": "xhr",
                    "optional": false
                },
                {
                    "types": null,
                    "name": "callback",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                375,
                431
            ],
            "description": "",
            "name": "handleCreationSuccess",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "request"
                },
                {
                    "types": null,
                    "name": "xhr",
                    "optional": false
                },
                {
                    "types": null,
                    "name": "callback",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                547,
                558
            ],
            "description": "",
            "name": "handleUpdateSuccess",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String"
                    ],
                    "name": "path",
                    "optional": false,
                    "description": "to get the value"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                850,
                852
            ],
            "description": "determinate if a attribute is available\n",
            "returns": {
                "types": [
                    "Boolean"
                ],
                "description": "true if attribute is not undefined"
            },
            "definedBy": "js.core.Bindable",
            "name": "has",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                108,
                118
            ],
            "definedBy": "js.core.Bindable",
            "overwritesMethod": true,
            "name": "initialize",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                126,
                133
            ],
            "definedBy": "js.data.DataSource",
            "overwritesMethod": true,
            "name": "initializeFormatProcessors",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                736,
                745
            ],
            "definedBy": "js.data.DataSource",
            "name": "initializeProcessors",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "b"
                },
                {
                    "name": "keys"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                995,
                1022
            ],
            "definedBy": "js.core.Bindable",
            "name": "isDeepEqual",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "value"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Element.js",
            "lineNumbers": [
                228,
                230
            ],
            "definedBy": "js.core.Element",
            "name": "isDefined",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "b"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                1023,
                1025
            ],
            "definedBy": "js.core.Bindable",
            "name": "isEqual",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "collectionPage"
                },
                {
                    "name": "options",
                    "types": [
                        "Object"
                    ],
                    "optional": false
                },
                {
                    "name": "callback",
                    "types": [
                        "Function"
                    ],
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                685,
                780
            ],
            "definedBy": "js.data.DataSource",
            "overwritesMethod": true,
            "name": "loadCollectionPage",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "model",
                    "optional": false
                },
                {
                    "types": null,
                    "name": "options",
                    "optional": false
                },
                {
                    "types": null,
                    "name": "callback",
                    "optional": false,
                    "description": "function(err, model, options)"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                291,
                342
            ],
            "description": "",
            "definedBy": "js.data.DataSource",
            "overwritesMethod": true,
            "name": "loadModel",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String",
                        "Array"
                    ],
                    "name": "message",
                    "optional": false,
                    "description": "the message to log"
                },
                {
                    "types": [
                        "String"
                    ],
                    "name": "level",
                    "optional": true,
                    "defaultValue": "\"info\"",
                    "description": "the service level of (debug, info, warn, error)"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Base.js",
            "lineNumbers": [
                51,
                72
            ],
            "description": "logs messages to configured logging functions\n",
            "definedBy": "js.core.Base",
            "name": "log",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "value",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Element.js",
            "lineNumbers": [
                225,
                227
            ],
            "description": "Binding helper to negate a Boolean value",
            "returns": {
                "types": [
                    "Boolean"
                ]
            },
            "definedBy": "js.core.Element",
            "name": "not",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "model"
                },
                {
                    "name": "data"
                },
                {
                    "name": "options"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                753,
                758
            ],
            "definedBy": "js.data.DataSource",
            "name": "parseModel",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                190,
                194
            ],
            "definedBy": "js.core.Component",
            "name": "removeAllChildren",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "child"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                168,
                188
            ],
            "definedBy": "js.core.Component",
            "name": "removeChild",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "model",
                    "types": [
                        "js.data.Model"
                    ],
                    "optional": false
                },
                {
                    "name": "options",
                    "types": [
                        "Object"
                    ],
                    "optional": false
                },
                {
                    "name": "callback",
                    "types": [
                        "Function"
                    ],
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                825,
                858
            ],
            "definedBy": "js.data.DataSource",
            "overwritesMethod": true,
            "name": "removeModel",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "js.data.Model"
                    ],
                    "name": "model",
                    "optional": false
                },
                {
                    "types": [
                        "JSON"
                    ],
                    "name": "data",
                    "optional": false,
                    "description": "deserialized, parsed data"
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": false
                },
                {
                    "types": [
                        "Function"
                    ],
                    "name": "callback",
                    "optional": false,
                    "description": "function (err, resolvedData)"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                939,
                943
            ],
            "description": "resolve references to models and collections",
            "definedBy": "js.data.DataSource",
            "name": "resolveReferences",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                882,
                884
            ],
            "description": "Returns the root context of the data source",
            "returns": {
                "types": [
                    "js.data.DataSource.Context"
                ],
                "description": "context"
            },
            "definedBy": "js.data.DataSource",
            "name": "root",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Base.js",
            "lineNumbers": [
                25,
                27
            ],
            "description": "determinate if the application runs in the browser or on node\n",
            "returns": {
                "types": [
                    "Boolean"
                ],
                "description": "true if the application runs in a browser"
            },
            "definedBy": "js.core.Base",
            "name": "runsInBrowser",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "js.data.Model"
                    ],
                    "name": "model",
                    "optional": false
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": false
                },
                {
                    "types": [
                        "Function"
                    ],
                    "name": "callback",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                980,
                997
            ],
            "description": "Saves a model",
            "definedBy": "js.data.DataSource",
            "name": "saveModel",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String"
                    ],
                    "name": "key",
                    "optional": false,
                    "description": "The attribute key"
                },
                {
                    "types": [
                        "String"
                    ],
                    "name": "value",
                    "optional": false,
                    "description": "The attribute value"
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": false,
                    "description": "A hash of options"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                651,
                738
            ],
            "description": "Sets new values for attributes and notify about changes\n",
            "returns": {
                "types": [
                    "js.core.Bindable"
                ],
                "description": "this"
            },
            "definedBy": "js.core.Bindable",
            "name": "set",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "key"
                },
                {
                    "name": "value"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                740,
                754
            ],
            "definedBy": "js.core.Bindable",
            "name": "setLater",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                500,
                528
            ],
            "description": "Writes attributes back to the source",
            "definedBy": "js.core.Bindable",
            "name": "sync",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "fnc",
                    "optional": false,
                    "description": "the function to synchronize"
                },
                {
                    "types": null,
                    "name": "cacheId",
                    "optional": false,
                    "description": "the cacheId for the fnc call"
                },
                {
                    "types": null,
                    "name": "callback",
                    "optional": false,
                    "description": "the callback to be called in the fnc"
                },
                {
                    "types": null,
                    "name": "scope",
                    "optional": false,
                    "description": "the fnc scope"
                },
                {
                    "types": null,
                    "name": "clear",
                    "optional": false,
                    "description": "if you want to clear the cache after all callbacks are called"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Base.js",
            "lineNumbers": [
                127,
                167
            ],
            "description": "",
            "definedBy": "js.core.Base",
            "name": "synchronizeFunctionCall",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String"
                    ],
                    "name": "eventType",
                    "optional": false
                },
                {
                    "types": [
                        "EventDispatcher.Event",
                        "Object"
                    ],
                    "name": "event",
                    "optional": false,
                    "description": "If you use an Object the object is wrapped in an Event"
                },
                {
                    "types": null,
                    "name": "target",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/EventDispatcher.js",
            "lineNumbers": [
                97,
                160
            ],
            "description": "Triggers a specific event and the * event\n",
            "definedBy": "js.core.EventDispatcher",
            "name": "trigger",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String"
                    ],
                    "name": "eventType",
                    "optional": false
                },
                {
                    "types": [
                        "Function"
                    ],
                    "name": "callback",
                    "optional": false
                },
                {
                    "name": "scope"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/EventDispatcher.js",
            "lineNumbers": [
                168,
                183
            ],
            "description": "Unbinds callbacks for events\n",
            "definedBy": "js.core.EventDispatcher",
            "name": "unbind",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String",
                        "Object"
                    ],
                    "name": "key",
                    "optional": false,
                    "description": "the attribute or attributes to unset"
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": true
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                894,
                897
            ],
            "description": "Unset attribute on $",
            "returns": {
                "types": [
                    "this"
                ]
            },
            "definedBy": "js.core.Bindable",
            "name": "unset",
            "visibility": "public"
        }
    ],
    "staticMethods": [],
    "defaults": {
        "endPoint": {
            "name": "endPoint",
            "defaultType": "value",
            "visibility": "public",
            "value": null,
            "lineNumbers": [
                57,
                57
            ],
            "description": "The endPoint of the REST API",
            "types": [
                "String"
            ]
        },
        "gateway": {
            "name": "gateway",
            "defaultType": "value",
            "visibility": "public",
            "value": null,
            "lineNumbers": [
                63,
                63
            ],
            "description": "\nIf needed, the gateway of the REST API",
            "types": [
                "String"
            ]
        },
        "determinateContextAttribute": {
            "name": "determinateContextAttribute",
            "defaultType": "value",
            "visibility": "public",
            "value": "href",
            "lineNumbers": [
                68,
                68
            ],
            "description": "Tells the RestDataSource which attribute field to use for context determination of the fetched resources",
            "types": [
                "Boolean"
            ]
        },
        "determinateContextByGateway": {
            "name": "determinateContextByGateway",
            "defaultType": "value",
            "visibility": "public",
            "value": true,
            "lineNumbers": [
                70,
                70
            ]
        },
        "parsePayloadOnCreate": {
            "name": "parsePayloadOnCreate",
            "defaultType": "value",
            "visibility": "public",
            "value": true,
            "lineNumbers": [
                76,
                76
            ],
            "description": "If true the returned payload of a POST get's parsed and written back in the Model",
            "types": [
                "Boolean"
            ]
        },
        "parsePayloadOnUpdate": {
            "name": "parsePayloadOnUpdate",
            "defaultType": "value",
            "visibility": "public",
            "value": true,
            "lineNumbers": [
                81,
                81
            ],
            "description": "If true the returned payload of a PUT get's parsed and written back in the Model",
            "types": [
                "Boolean"
            ]
        },
        "useSafeHttpMethods": {
            "name": "useSafeHttpMethods",
            "defaultType": "value",
            "visibility": "public",
            "value": false,
            "lineNumbers": [
                86,
                86
            ],
            "description": "Sends the used HTTP method as a query parameter and uses the POST method",
            "types": [
                "Boolean"
            ]
        },
        "collectionPageSize": {
            "name": "collectionPageSize",
            "defaultType": "value",
            "visibility": "public",
            "value": 100,
            "lineNumbers": [
                92,
                92
            ],
            "description": "\nSet's the default collection page size for fetching collection",
            "types": [
                "Number"
            ]
        },
        "suffix": {
            "name": "suffix",
            "defaultType": "value",
            "visibility": "public",
            "value": null,
            "lineNumbers": [
                98,
                98
            ],
            "description": "a suffix like `.json` to add to each request",
            "types": [
                "String"
            ]
        },
        "dateFormat": {
            "name": "dateFormat",
            "defaultType": "value",
            "visibility": "public",
            "value": "YYYY-MM-DDTHH:mm:ssZ",
            "lineNumbers": [
                717,
                717
            ],
            "definedBy": "js.data.DataSource"
        },
        "cid": {
            "name": "cid",
            "defaultType": "factory",
            "visibility": "public",
            "lineNumbers": [
                67,
                67
            ],
            "description": "the cid is a unique identifier for the component within a xaml class. \\\nThe corresponding component will be automatically added to the $ of the instance of the xaml class.\n",
            "types": [
                "String"
            ],
            "definedBy": "js.core.Component"
        },
        "creationPolicy": {
            "name": "creationPolicy",
            "defaultType": "value",
            "visibility": "public",
            "value": "auto",
            "lineNumbers": [
                134,
                134
            ],
            "description": "Decides if the initialization of the component is started automatically or manually by the application",
            "types": [
                "String"
            ],
            "definedBy": "js.core.Element"
        }
    },
    "properties": {
        "$defaultProcessorFactory": {
            "name": "$defaultProcessorFactory",
            "visibility": "private",
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                106,
                106
            ],
            "propertyType": "complex",
            "value": " RestDataProcessor",
            "definedBy": "js.data.DataSource",
            "overwrites": true
        },
        "$processors": {
            "name": "$processors",
            "visibility": "private",
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                711,
                711
            ],
            "propertyType": "complex",
            "value": " {}",
            "definedBy": "js.data.DataSource"
        },
        "$entityFactory": {
            "name": "$entityFactory",
            "visibility": "private",
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                712,
                712
            ],
            "propertyType": "complex",
            "value": " Entity",
            "definedBy": "js.data.DataSource"
        },
        "$defaultProcessor": {
            "name": "$defaultProcessor",
            "visibility": "private",
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                714,
                714
            ],
            "value": "null",
            "propertyType": "value",
            "definedBy": "js.data.DataSource"
        },
        "$errorAttribute": {
            "name": "$errorAttribute",
            "visibility": "private",
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                70,
                70
            ],
            "value": "null",
            "propertyType": "value",
            "definedBy": "js.core.Component"
        },
        "$defaultContentName": {
            "name": "$defaultContentName",
            "visibility": "private",
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                75,
                75
            ],
            "value": "null",
            "propertyType": "value",
            "description": "if set all children from the descriptor will be placed into a\njs.core.Content block with the name of $defaultContentName",
            "definedBy": "js.core.Component"
        },
        "$defaultTemplateName": {
            "name": "$defaultTemplateName",
            "visibility": "private",
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                77,
                77
            ],
            "value": "null",
            "propertyType": "value",
            "definedBy": "js.core.Component"
        }
    },
    "fqClassName": "js.data.RestDataSource",
    "inherit": "js.data.DataSource",
    "exports": {
        "RestContext": {
            "type": "InnerClass",
            "fqClassName": "js.data.RestDataSource.Context"
        },
        "XmlFormatProcessor": {
            "type": "InnerClass",
            "fqClassName": "js.data.RestDataSource.XmlFormatProcessor"
        }
    },
    "dependencies": [
        "JSON",
        "flow",
        "js.data.Collection",
        "js.data.DataSource",
        "js.data.Model",
        "js.lib.query.composer.RestQueryComposer",
        "require",
        "underscore"
    ],
    "type": "js",
    "file": "js/data/RestDataSource.js",
    "package": "js.data",
    "inheritancePath": [
        "js.data.DataSource",
        "js.core.Component",
        "js.core.Element",
        "js.core.Bindable",
        "js.core.EventDispatcher",
        "js.core.Base"
    ]
}